#!/bin/bash

# LLM-D Deployment Verification Script
# This script verifies that the LLM-D infrastructure is running correctly

set -e

NAMESPACE="${1:-llm-d}"
TIMEOUT="${2:-300}"

echo "üîç Verifying LLM-D deployment in namespace: $NAMESPACE"
echo "‚è±Ô∏è  Timeout: ${TIMEOUT}s"
echo ""

# Check if kubectl is available
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl is not installed or not in PATH"
    exit 1
fi

# Check if we can connect to the cluster
echo "üîå Checking cluster connectivity..."
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå Cannot connect to Kubernetes cluster"
    echo "üí° Make sure you've run: terraform output kubectl_config_command"
    exit 1
fi
echo "‚úÖ Connected to cluster"

# Check if namespace exists
echo ""
echo "üìÅ Checking namespace..."
if ! kubectl get namespace "$NAMESPACE" &> /dev/null; then
    echo "‚ùå Namespace '$NAMESPACE' does not exist"
    exit 1
fi
echo "‚úÖ Namespace '$NAMESPACE' exists"

# Check installer job status
echo ""
echo "üöÄ Checking LLM-D installer job..."
JOB_STATUS=$(kubectl get job llm-d-installer -n "$NAMESPACE" -o jsonpath='{.status.conditions[0].type}' 2>/dev/null || echo "NotFound")

if [ "$JOB_STATUS" = "NotFound" ]; then
    echo "‚ùå LLM-D installer job not found"
    echo "üí° Run: terraform apply to create the installer job"
    exit 1
elif [ "$JOB_STATUS" = "Complete" ]; then
    echo "‚úÖ LLM-D installer job completed successfully"
elif [ "$JOB_STATUS" = "Failed" ]; then
    echo "‚ùå LLM-D installer job failed"
    echo "üìã Job logs:"
    kubectl logs job/llm-d-installer -n "$NAMESPACE" --tail=20
    exit 1
else
    echo "‚è≥ LLM-D installer job is still running..."
    echo "‚è≥ Waiting for completion (timeout: ${TIMEOUT}s)..."
    
    if kubectl wait --for=condition=complete job/llm-d-installer -n "$NAMESPACE" --timeout="${TIMEOUT}s"; then
        echo "‚úÖ LLM-D installer job completed successfully"
    else
        echo "‚ùå LLM-D installer job did not complete within timeout"
        echo "üìã Job logs:"
        kubectl logs job/llm-d-installer -n "$NAMESPACE" --tail=20
        exit 1
    fi
fi

# Check pods
echo ""
echo "üîç Checking pods in namespace..."
PODS=$(kubectl get pods -n "$NAMESPACE" --no-headers 2>/dev/null | wc -l)
if [ "$PODS" -eq 0 ]; then
    echo "‚ö†Ô∏è  No pods found in namespace (this might be normal if LLM-D uses different deployment method)"
else
    echo "üìä Found $PODS pods in namespace"
    kubectl get pods -n "$NAMESPACE"
    
    # Check if any pods are not running
    NOT_RUNNING=$(kubectl get pods -n "$NAMESPACE" --no-headers --field-selector=status.phase!=Running 2>/dev/null | wc -l)
    if [ "$NOT_RUNNING" -gt 0 ]; then
        echo ""
        echo "‚ö†Ô∏è  Some pods are not in Running state:"
        kubectl get pods -n "$NAMESPACE" --field-selector=status.phase!=Running
    fi
fi

# Check services
echo ""
echo "üåê Checking services in namespace..."
SERVICES=$(kubectl get services -n "$NAMESPACE" --no-headers 2>/dev/null | wc -l)
if [ "$SERVICES" -eq 0 ]; then
    echo "‚ö†Ô∏è  No services found in namespace"
else
    echo "üìä Found $SERVICES services in namespace"
    kubectl get services -n "$NAMESPACE"
fi

# Check deployments
echo ""
echo "üöÄ Checking deployments in namespace..."
DEPLOYMENTS=$(kubectl get deployments -n "$NAMESPACE" --no-headers 2>/dev/null | wc -l)
if [ "$DEPLOYMENTS" -eq 0 ]; then
    echo "‚ö†Ô∏è  No deployments found in namespace"
else
    echo "üìä Found $DEPLOYMENTS deployments in namespace"
    kubectl get deployments -n "$NAMESPACE"
fi

# Check configmaps and secrets
echo ""
echo "‚öôÔ∏è  Checking configuration..."
CONFIGMAPS=$(kubectl get configmaps -n "$NAMESPACE" --no-headers 2>/dev/null | wc -l)
SECRETS=$(kubectl get secrets -n "$NAMESPACE" --no-headers 2>/dev/null | wc -l)
echo "üìä Found $CONFIGMAPS configmaps and $SECRETS secrets"

# Final status
echo ""
echo "üéâ Verification complete!"
echo ""
echo "üìã Summary:"
echo "  ‚Ä¢ Namespace: $NAMESPACE ‚úÖ"
echo "  ‚Ä¢ Installer Job: Complete ‚úÖ"
echo "  ‚Ä¢ Pods: $PODS"
echo "  ‚Ä¢ Services: $SERVICES"
echo "  ‚Ä¢ Deployments: $DEPLOYMENTS"
echo "  ‚Ä¢ ConfigMaps: $CONFIGMAPS"
echo "  ‚Ä¢ Secrets: $SECRETS"
echo ""

if [ "$PODS" -gt 0 ] && [ "$SERVICES" -gt 0 ]; then
    echo "üéä LLM-D appears to be deployed successfully!"
    echo ""
    echo "üîó Next steps:"
    echo "  ‚Ä¢ Check service endpoints: kubectl get services -n $NAMESPACE"
    echo "  ‚Ä¢ View model configuration: kubectl get configmap llm-d-model-config -n $NAMESPACE -o yaml"
    echo "  ‚Ä¢ Check deployed model: kubectl get configmap llm-d-model-config -n $NAMESPACE -o jsonpath='{.data.default_model}'"
    echo "  ‚Ä¢ View logs: kubectl logs -n $NAMESPACE -l app=<app-name>"
    echo "  ‚Ä¢ Port-forward to access services: kubectl port-forward -n $NAMESPACE service/<service-name> 8080:80"
else
    echo "‚ö†Ô∏è  LLM-D deployment may be incomplete or using a different structure"
    echo "üí° Check the installer logs for more details: kubectl logs job/llm-d-installer -n $NAMESPACE"
fi

echo ""
